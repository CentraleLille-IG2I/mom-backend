# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-05-11 18:37
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=250)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=250)),
                ('date', models.DateTimeField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('place_event', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=250)),
                ('status', models.CharField(choices=[('P', 'Pending'), ('A', 'Accepted'), ('R', 'Refused')], default='P', max_length=1)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('fk_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Event')),
            ],
        ),
        migrations.CreateModel(
            name='IsAffectedTo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='IsSyncedWith',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_token', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Rank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=100)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('fk_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Event')),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=250)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('fk_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Event')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=100)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('fk_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Event')),
            ],
        ),
        migrations.CreateModel(
            name='TaskItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('completed', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('fk_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Task')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=70)),
                ('phone_number', models.CharField(max_length=15)),
            ],
        ),
        migrations.AddField(
            model_name='task',
            name='fk_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.User'),
        ),
        migrations.AddField(
            model_name='status',
            name='fk_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.User'),
        ),
        migrations.AddField(
            model_name='issyncedwith',
            name='fk_network',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Network'),
        ),
        migrations.AddField(
            model_name='issyncedwith',
            name='fk_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.User'),
        ),
        migrations.AddField(
            model_name='isaffectedto',
            name='fk_task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Task'),
        ),
        migrations.AddField(
            model_name='isaffectedto',
            name='fk_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.User'),
        ),
        migrations.AddField(
            model_name='invitation',
            name='fk_rank',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Rank'),
        ),
        migrations.AddField(
            model_name='invitation',
            name='fk_user_created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_creator', to='backend.User'),
        ),
        migrations.AddField(
            model_name='invitation',
            name='fk_user_invited',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_invited', to='backend.User'),
        ),
        migrations.AddField(
            model_name='event',
            name='fk_user_created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.User'),
        ),
        migrations.AddField(
            model_name='comment',
            name='fk_task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Task'),
        ),
        migrations.AddField(
            model_name='comment',
            name='fk_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.User'),
        ),
    ]
